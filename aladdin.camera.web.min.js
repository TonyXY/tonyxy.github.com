/*!
 * aladdin.camera v1.0.1
 * (c) 2017 Aladdin
 */
(function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('aladdin')) :
        typeof define === 'function' && define.amd ? define(['aladdin'], factory) :
        (global.aladdin = global.aladdin || {}, global.aladdin.camera = factory(global.aladdin));
}(this, function(aladdin) {
    'use strict';

    aladdin = 'default' in aladdin ? aladdin['default'] : aladdin;
    if (aladdin.env.isHybrid) {
        function Camera(aladdin) {
            this._aladdin = aladdin;
        }

        Object.defineProperty(Camera.prototype, 'name', {
            value: 'camera',
            writable: false
        });

        /**
         * 获取照片
         *
         * @param {Object} opts
         * @param {Function} cb
         */
        Camera.prototype.getPhotos = function(opts, cb) {
            opts = opts || {};

            this._aladdin.call(this.name, 'getPhotos', opts, cb);

            return this;
        };
        aladdin.use(Camera);
    } else {
        function Camera(aladdin) {

        }

        Object.defineProperty(Camera.prototype, 'name', {
            value: 'camera',
            writable: false
        });

        Camera.prototype.getPhotos = function(options, callback) {
            if (typeof callback !== 'function') {
                return this;
            }
            options = options || {};

            var inputElem = document.createElement('input');
            inputElem.setAttribute('type', 'file');
            inputElem.setAttribute('accept', 'image/png, image/jpeg');
            inputElem.style.cssText = 'opacity:0;width:0;height:0;position: absolute;';
            inputElem.addEventListener('change', function() {
                var file = this.files[0];
                var reader = new FileReader();
                reader.onload = function() {
                    // 通过 reader.result 来访问生成的 DataURL
                    getDataUrl(reader.result, options, function(dataUrl) {
                        if (dataUrl) {
                            var photos = [];
                            photos[0] = (options.returnType === 'base64' ? dataUrl.split(',')[1] : dataUrl);
                            callback(null, photos);
                            inputElem.remove();
                        } else {
                            callback({
                                code: '',
                                message: '处理图片失败'
                            });
                            inputElem.remove();
                        }
                    });
                };
                reader.onerror = function() {
                    callback({
                        code: '',
                        message: '读取图片失败'
                    });
                    inputElem.remove();
                };
                reader.readAsDataURL(file);
            });

            var evt = document.createEvent('MouseEvents');
            evt.initEvent('click', true, true);
            inputElem.dispatchEvent(evt);

            return this;
        };

        function getDataUrl(url, options, callback) {
            var image = new Image();
            image.onload = function() {
                var opt = {
                    width: options.width || image.naturalWidth,
                    height: options.height || image.naturalHeight,
                    type: options.type === 'png' ? 'image/png' : 'image/jpeg',
                    quality: isNaN(options.quality) ? 1 : options.quality / 100
                };

                var canvas = document.createElement('canvas');
                canvas.id = 'canvas';
                canvas.setAttribute('width', opt.width);
                canvas.setAttribute('height', opt.height);
                var ctx = canvas.getContext('2d');
                ctx.drawImage(image, 0, 0, opt.width, opt.height);
                var data = canvas.toDataURL(opt.type, opt.quality);
                typeof callback === 'function' && callback(data);
            };
            image.onerror = function() {
                typeof callback === 'function' && callback(null);
            };
            image.src = url;
        }
        aladdin.use(Camera);
    }

    var aladdin_camera_web = aladdin.camera;

    return aladdin_camera_web;

}));
